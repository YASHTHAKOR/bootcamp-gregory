{"version":3,"sources":["store/actions.js","helpers.js","store/interactions.js","store/selectors.js","components/Navbar/index.js","components/Commons/Spinner.js","components/Trades/index.js","components/OrderBook/index.js","components/MyTransactions/index.js","components/PriceChart/config.js","components/PriceChart/index.js","components/Balance/index.js","components/NewOrder/index.js","components/Content/index.js","components/App/index.js","store/reducer.js","store/configureStore.js","reportWebVitals.js","index.js"],"names":["web3AccountLoaded","account","type","cancelledOrdersLoaded","cancelledOrders","filledOrdersLoaded","filledOrders","allOrdersLoaded","allOrders","tokenBalanceLoaded","balance","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","ETHER_ADDRESS","DECIMALS","ether","wei","tokens","GREEN","RED","formatBalance","Math","round","loadWeb3","dispatch","web3","Web3","window","ethereum","connection","loadAccount","a","eth","getAccounts","accounts","console","log","loadToken","networkId","token","Contract","Token","abi","networks","address","contract","Err","loadExchange","exchange","Exchange","loadAllOrders","getPastEvents","fromBlock","toBlock","cancelStream","map","event","returnValues","tradeStream","orderStream","subscribeToEvents","events","Cancel","error","order","Deposit","Withdraw","Trade","Order","loadBalances","getBalance","etherBalance","methods","balanceOf","call","tokenBalance","exchangeEtherBalance","options","exchangeTokenBalance","depositEther","amount","send","from","value","utils","toWei","on","hash","withdrawEther","state","get","accountSelector","createSelector","web3Selector","w","tokenLoaded","tokenSelector","tl","t","exchangeLoaded","exchangeSelector","el","e","contractLoadedSelector","loaded","o","filledOrdersLoadedSelector","filledOrdersSelector","Orders","orders","sort","b","timestamp","decorateFilledOrders","previousOrder","decorateOrder","decorateFilledOrder","tokenAmount","etherAmount","tokenGive","amountGive","amountGet","tokenPrice","precision","formattedTimestamp","moment","unix","format","tokenPriceClass","id","orderId","openOrders","all","cancelled","filled","reject","orderFilled","some","orderCancelled","orderBookLoaded","orderBookLoadedSelector","orderBookSelector","decorateOrderBookOrders","groupBy","buyOrders","buyOrder","sellOrders","decorateOrderBookOrder","orderType","orderTypeClass","orderFillAction","myFilledOrderLoadedSelector","myFilledOrdersSelector","filter","user","userFill","decorateMyFilledOrders","decorateMyFilledOrder","orderFillClass","myOrderOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","decorateMyOpenOrder","priceChatLoadedSelector","priceChartSelector","secondLastOrder","lastOrder","slice","length","lastPrice","lastPriceChange","series","data","buildGraphData","startOf","Object","keys","hour","group","open","close","high","maxBy","low","minBy","x","Date","y","orderCancellingSelector","status","orderFillingSelector","balancesLoadingSelector","etherBalanceSelector","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","etherDepositAmountSelector","etherWithdrawAmountSelector","tokenDepositAmountSelector","tokenWithdrawAmountSelector","buyOrderSelector","sellOrderSelector","Navbar","useSelector","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","target","rel","Trades","orderLoaded","Spinner","OrderBook","orderFilling","orderBook","showOrderBook","useDispatch","renderOrder","OverlayTrigger","placement","overlay","Tooltip","onClick","fillOrder","listOrderBook","showMyFilledOrdersView","myFilledOrders","showMyOpenOrderView","myOpenOrders","cancelOrder","alert","MyTransaction","orderCancelling","openOrdersLoaded","showMyFilledOrders","showMyOpenOrders","Tabs","defaultActiveKey","Tab","eventKey","title","chartOptions","chart","animations","enabled","toolbar","show","width","tooltip","theme","style","fontSize","fontFamily","undefined","formatter","marker","items","display","fixed","position","offsetX","offsetY","xaxis","labels","colors","cssClass","yaxis","minWidth","maxWidth","color","rotate","showPriceChart","priceChart","widht","height","PriceChart","priceChartLoaded","Balance","balanceLoading","etherDepositAmount","etherWithdrawAmount","tokenDepositAmount","tokenWithdrawAmount","useEffect","loadBlockChainData","onSubmit","preventDefault","placeholder","onChange","required","approve","depositToken","withdrawToken","showFormView","sellOrder","showBuyTotal","showSellTotal","tokenGet","price","toString","makeOrder","makeBuyOrder","makeSellOrder","NewOrder","showForm","making","Content","loadBlockchainData","App","this","props","net","getId","contractsLoaded","Component","connect","rootReduces","combineReducers","action","index","findIndex","balancesLoading","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","ConfigureStore","preloadedState","createStore","rootReducer","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41ebfa95.chunk.js","sourcesContent":["export function web3Loaded(connection) {\n    return {\n        type: 'WEB3_LOADED',\n        connection\n    }\n}\n\nexport function web3AccountLoaded(account) {\n    return {\n        type: 'WEB3_ACCOUNT_LOADED',\n        account\n    }\n}\n\nexport function tokenLoaded(contract) {\n    return {\n        type: 'TOKEN_LOADED',\n        contract\n    }\n}\n\nexport function exchangeLoaded(contract) {\n    return {\n        type: 'EXCHANGE_LOADED',\n        contract\n    }\n}\n\nexport function cancelledOrdersLoaded(cancelledOrders) {\n    return {\n        type: 'CANCELLED_ORDERS_LOADED',\n        cancelledOrders\n    }\n}\n\nexport function filledOrdersLoaded(filledOrders) {\n    return {\n        type: 'FILLED_ORDERS_LOADED',\n        filledOrders\n    }\n}\n\nexport function allOrdersLoaded(allOrders) {\n    return {\n        type: 'ALL_ORDERS_LOADED',\n        allOrders\n    }\n}\n\nexport function orderCancelling() {\n    return {\n        type: 'ORDER_CANCELLING'\n    }\n}\n\nexport function orderCancelled(order) {\n    return {\n        type: 'ORDER_CANCELLED',\n        order\n    }\n}\n\nexport function orderFilling() {\n    return {\n        type: 'ORDER_FILLING'\n    }\n}\n\nexport function orderFilled(order) {\n    return {\n        type: 'ORDER_FILLED',\n        order\n    }\n}\nexport function etherBalanceLoaded(balance) {\n    return {\n        type: 'ETHER_BALANCE_LOADED',\n        balance\n    }\n}\nexport function tokenBalanceLoaded(balance) {\n    return {\n        type: 'TOKEN_BALANCE_LOADED',\n        balance\n    }\n}\nexport function exchangeEtherBalanceLoaded(balance) {\n    return {\n        type: 'EXCHANGE_ETHER_BALANCE_LOADED',\n        balance\n    }\n}\nexport function exchangeTokenBalanceLoaded(balance) {\n    return {\n        type: 'EXCHANGE_TOKEN_BALANCE_LOADED',\n        balance\n    }\n}\nexport function balancesLoaded() {\n    return {\n        type: 'BALANCES_LOADED'\n    }\n}\n\nexport function balancesLoading() {\n    return {\n        type: 'BALANCES_LOADING'\n    }\n}\n\nexport function etherDepositAmountChanged(amount) {\n    return {\n        type: 'ETHER_DEPOSIT_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function etherWithdrawAmountChanged(amount) {\n    return {\n        type: 'ETHER_WITHDRAW_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function tokenDepositAmountChanged(amount) {\n    return {\n        type: 'TOKEN_DEPOSIT_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function tokenWithdrawAmountChanged(amount) {\n    return {\n        type: 'TOKEN_WITHDRAW_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function buyOrderAmountChanged(amount) {\n    return {\n        type: 'BUY_ORDER_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function buyOrderPriceChanged(price) {\n    return {\n            type: 'BUY_ORDER_PRICE_CHANGED',\n        price\n    }\n}\n\nexport function buyOrderMaking() {\n    return {\n        type: 'BUY_ORDER_MAKING'\n    }\n}\n\nexport function orderMade(order) {\n    return {\n        type: 'ORDER_MADE',\n        order\n    }\n}\n\nexport function sellOrderAmountChanged(amount) {\n    return {\n        type: 'SELL_ORDER_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function sellOrderPriceChanged(price) {\n    return {\n        type: 'SELL_ORDER_PRICE_CHANGED',\n        price\n    }\n}\n\nexport function sellOrderMaking() {\n    return {\n        type: 'SELL_ORDER_MAKING'\n    }\n}","export const ETHER_ADDRESS = '0x0000000000000000000000000000000000000000';\n\nexport const DECIMALS = (10**18);\n\nexport const ether = (wei) => {\n    if(wei) {\n        return (wei/DECIMALS);\n    }\n}\n\nexport const tokens = ether;\nexport const GREEN = 'success';\nexport const RED = 'danger';\n\nexport const formatBalance = (balance) => {\n    const precision = 100;\n\n    balance = ether(balance);\n    balance = Math.round(balance * precision)/ precision;\n\n    return balance;\n}\n\n","import Web3 from 'web3';\nimport {\n    web3Loaded,\n    web3AccountLoaded,\n    tokenLoaded,\n    exchangeLoaded,\n    cancelledOrdersLoaded,\n    filledOrdersLoaded,\n    allOrdersLoaded,\n    orderCancelling,\n    orderCancelled,\n    orderFilling,\n    orderFilled,\n    etherBalanceLoaded,\n    tokenBalanceLoaded,\n    exchangeEtherBalanceLoaded,\n    exchangeTokenBalanceLoaded,\n    balancesLoaded,\n    balancesLoading,\n    buyOrderMaking,\n    sellOrderMaking,\n    orderMade\n} from './actions'\nimport Token from \"../abis/Token.json\";\nimport Exchange from \"../abis/Exchange.json\";\nimport {ETHER_ADDRESS} from '../helpers';\n\nexport const loadWeb3 = (dispatch) => {\n    const web3 = new Web3(window.ethereum || 'http://localhost:8545');\n    dispatch(web3Loaded(web3));\n    return web3;\n}\n\nexport const loadAccount = async (web3, dispatch) => {\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    const account = accounts[0];\n    dispatch(web3AccountLoaded(account));\n    return account;\n}\n\nexport const loadToken = (web3, networkId, dispatch) => {\n\n    try {\n        const token = new web3.eth.Contract(Token.abi, Token.networks[networkId].address);\n        dispatch(tokenLoaded(token));\n        return token;\n    } catch (Err) {\n        console.log('Contract not deployed to the current network. Please select another network with metamask');\n        return null;\n    }\n\n}\n\nexport const loadExchange = (web3, networkId, dispatch) => {\n\n    try {\n        const exchange = new web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address);\n        dispatch(exchangeLoaded(exchange));\n        return exchange;\n    } catch (Err) {\n        console.log('Contract not deployed to the current network. Please select another network with metamask');\n        return null;\n    }\n\n}\n\nexport const loadAllOrders = async (exchange, dispatch) => {\n\n    const cancelStream = await exchange.getPastEvents('Cancel', {fromBlock: 0, toBlock: 'latest'});\n\n    const cancelledOrders = cancelStream.map((event) => event.returnValues);\n\n    dispatch(cancelledOrdersLoaded(cancelledOrders));\n\n    const tradeStream = await exchange.getPastEvents('Trade', {fromBlock: 0, toBlock: 'latest'});\n    const filledOrders = tradeStream.map((event) => event.returnValues);\n\n    dispatch(filledOrdersLoaded(filledOrders));\n\n    const orderStream = await exchange.getPastEvents('Order', {fromBlock: 0, toBlock: 'latest'});\n    const allOrders = orderStream.map((event) => event.returnValues);\n\n    dispatch(allOrdersLoaded(allOrders));\n\n\n}\n\n\nexport const subscribeToEvents = async (dispatch, exchange) => {\n    exchange.events.Cancel({}, (error, event) => {\n        dispatch(orderCancelled(event.returnValues));\n    })\n\n    exchange.events.Deposit({}, (error, event) => {\n        dispatch(balancesLoaded(event.returnValues));\n    })\n\n    exchange.events.Withdraw({}, (error, event) => {\n        dispatch(balancesLoaded(event.returnValues));\n    })\n\n    exchange.events.Trade({}, (error, event) => {\n        dispatch(orderFilled(event.returnValues));\n    })\n\n    exchange.events.Order({}, (error, event) => {\n        dispatch(orderMade(event.returnValues));\n    })\n}\n\nexport const cancelOrder = (dispatch, exchange, order, account) => {\n    exchange.methods.cancelOrder(order.id).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(orderCancelling())\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('There was an error!');\n        })\n}\n\nexport const fillOrder = (dispatch, exchange, order, account) => {\n    exchange.methods.fillOrder(order.id).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(orderFilling());\n        })\n        .on('error', (error) => {\n            console.log(error);\n        })\n}\n\nexport const loadBalances = async (dispatch, web3, exchange, token, account) => {\n\n    const etherBalance = await web3.eth.getBalance(account);\n    dispatch(etherBalanceLoaded(etherBalance));\n\n    const tokenBalance = await token.methods.balanceOf(account).call();\n    dispatch(tokenBalanceLoaded(tokenBalance));\n\n    const exchangeEtherBalance = await exchange.methods.balanceOf(ETHER_ADDRESS, account).call();\n    dispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance));\n\n    const exchangeTokenBalance = await exchange.methods.balanceOf(token.options.address, account).call();\n    dispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance));\n\n    dispatch(balancesLoaded())\n\n\n}\n\nexport const depositEther = async (dispatch, exchange, web3, amount, account) => {\n    exchange.methods.depositEther().send({from: account, value: web3.utils.toWei(amount, 'ether')})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('error', (error) => {\n            console.log(error);\n        })\n}\n\n\nexport const withdrawEther = async (dispatch, exchange, web3, amount, account) => {\n    exchange.methods.withdrawEther(web3.utils.toWei(amount, 'ether')).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('error', (error) => {\n            console.log(error);\n        })\n}\n\n\nexport const depositToken = (dispatch, exchange, web3, token, amount, account) => {\n    amount = web3.utils.toWei(amount, 'ether');\n\n    token.methods.approve(exchange.options.address, amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            exchange.methods.depositToken(token.options.address, amount).send({from: account})\n                .on('transactionHash', (hash) => {\n                    dispatch(balancesLoading());\n                })\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('there was an error');\n        })\n}\n\nexport const withdrawToken = (dispatch, exchange, web3, token, amount, account) => {\n    exchange.methods.withdrawToken(token.options.address, web3.utils.toWei(amount, 'ether')).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('there was an error');\n        })\n}\n\nexport const makeBuyOrder = (dispatch, exchange, token, web3, order, account) => {\n    debugger;\n    const tokenGet = token.options.address;\n    const amountGet = web3.utils.toWei(order.amount, 'ether');\n    const tokenGive = ETHER_ADDRESS;\n    const amountGive = web3.utils.toWei((order.amount* order.price).toString(), 'ether');\n\n    exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(buyOrderMaking());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('There was an error!');\n        })\n\n}\n\nexport const makeSellOrder = (dispatch, exchange, token, web3, order, account) => {\n    const tokenGive = token.options.address;\n    const amountGive = web3.utils.toWei(order.amount, 'ether');\n    const tokenGet = ETHER_ADDRESS;\n    const amountGet = web3.utils.toWei((order.amount* order.price).toString(), 'ether');\n\n    exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(sellOrderMaking());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('There was an error!');\n        })\n\n}","import {get, groupBy, reject,maxBy, minBy} from 'lodash';\nimport {createSelector} from 'reselect';\nimport moment from 'moment';\nimport {ETHER_ADDRESS, ether, tokens, GREEN, RED, formatBalance} from '../helpers';\n\nconst account = state => get(state, 'web3.account');\nexport const accountSelector = createSelector(account, a => a);\n\nconst web3 = state => get(state, 'web3.connection');\nexport const web3Selector = createSelector(web3, w => w);\n\nconst tokenLoaded = state => get(state, 'token.loaded', false);\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tl => tl);\n\nconst token = state => get(state, 'token.contract');\nexport const tokenSelector = createSelector(token,t => t)\n\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false);\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el);\n\nconst exchange = state => get(state, 'exchange.contract');\nexport const exchangeSelector = createSelector(exchange, e => e)\n\nexport const contractLoadedSelector = createSelector(\n    tokenLoaded,\n    exchangeLoaded,\n    (tl, el) => tl && el\n);\n\nconst allOrdersLoaded = state => get(state, 'exchange.allOrders.loaded', false);\nconst allOrders = state => get(state, 'exchange.allOrders.data', []);\n\nconst cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false);\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, loaded => loaded);\n\nconst cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', []);\nexport const cancelledOrdersSelector = createSelector(cancelledOrders, o => o);\n\nconst filledOrdersLoaded = state => get(state, 'exchange.filledOrders.loaded', false);\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded);\n\nconst filledOrders = state => get(state, 'exchange.filledOrders.data', []);\nexport const filledOrdersSelector = createSelector(\n    filledOrders,\n    (Orders) => {\n        let orders = Orders.sort((a, b) => b.timestamp - a.timestamp);\n\n        orders = decorateFilledOrders(orders);\n\n        return orders.sort((a, b) => b.timestamp - a.timestamp);\n    }\n)\n\nconst decorateFilledOrders = (orders) => {\n    let previousOrder = orders[0];\n    return orders.map((order) => {\n        order = decorateOrder(order);\n        order = decorateFilledOrder(order, previousOrder);\n        previousOrder = order;\n        return order\n    })\n}\n\nconst decorateOrder = (order) => {\n    let tokenAmount, etherAmount;\n    if (order.tokenGive === ETHER_ADDRESS) {\n        etherAmount = order.amountGive;\n        tokenAmount = order.amountGet;\n    } else {\n        tokenAmount = order.amountGive;\n        etherAmount = order.amountGet;\n    }\n\n    let tokenPrice = (etherAmount / tokenAmount);\n    const precision = 100000;\n    tokenPrice = Math.round(tokenPrice * precision) / precision;\n    return {\n        ...order,\n        etherAmount: ether(etherAmount),\n        tokenAmount: tokens(tokenAmount),\n        tokenPrice,\n        formattedTimestamp: moment.unix(order.timestamp).format('h:mm:ss a M/D')\n    };\n}\n\nconst decorateFilledOrder = (order, previousOrder) => {\n    return ({\n        ...order,\n        tokenPriceClass: tokenPriceClass(order.tokenPrice, order.id, previousOrder)\n    })\n}\n\nconst tokenPriceClass = (tokenPrice, orderId, previousOrder) => {\n\n    if(orderId === previousOrder.id) {\n        return GREEN;\n    }\n\n\n    if(previousOrder.tokenPrice <= tokenPrice) {\n        return GREEN;\n    } else {\n        return RED\n    }\n}\n\nconst openOrders = state => {\n    const all = allOrders(state);\n    const cancelled = cancelledOrders(state);\n    const filled = filledOrders(state);\n\n    const openOrders = reject(all, (order) => {\n        const orderFilled = filled.some((o) => o.id === order.id );\n        const orderCancelled = cancelled.some((o =>o.id === order.id ));\n        return orderFilled || orderCancelled\n    });\n\n    return openOrders;\n}\n\nconst orderBookLoaded = state => cancelledOrdersLoaded(state) && filledOrdersLoaded(state) && allOrdersLoaded(state);\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, loaded => loaded);\n\nexport const orderBookSelector = createSelector(\n    openOrders,\n    (orders) => {\n        orders = decorateOrderBookOrders(orders);\n\n        orders = groupBy(orders, 'orderType');\n\n        const buyOrders = get(orders, 'buy', []);\n\n        orders = {\n            ...orders,\n            buyOrder: buyOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\n        }\n\n        const sellOrders = get(orders, 'sell', []);\n\n        orders = {\n            ...orders,\n            sellOrders: sellOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\n        }\n\n        return orders;\n    }\n\n);\n\nconst decorateOrderBookOrders = (orders) => {\n    return (\n        orders.map((order) => {\n            order = decorateOrder(order);\n            order = decorateOrderBookOrder(order);\n            return order;\n        })\n    )\n}\n\nconst decorateOrderBookOrder = (order) => {\n    const orderType = order.tokenGive === ETHER_ADDRESS? 'buy': 'sell';\n    return ({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy'? GREEN: RED),\n        orderFillAction: orderType === 'buy' ? 'sell':'buy'\n    });\n}\n\nexport const myFilledOrderLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded);\n\nexport const myFilledOrdersSelector = createSelector(account,\n    filledOrders,\n    (account, filledOrders) => {\n        let orders = filledOrders.filter(o => o.user === account || o.userFill === account);\n\n        orders = orders.sort((a,b) =>a.timestamp - b.timestamp);\n\n        orders = decorateMyFilledOrders(orders, account);\n\n        return orders;\n    });\n\nconst decorateMyFilledOrders = (orders, account) => {\n    return (\n        orders.map((order) => {\n            order = decorateOrder(order);\n            order = decorateMyFilledOrder(order, account);\n            return order;\n        })\n    )\n}\n\nconst decorateMyFilledOrder = (order, account) => {\n\n    let myOrder = order.user === account;\n\n    let orderType;\n\n    if(myOrder){\n        orderType = order.tokenGive === ETHER_ADDRESS? 'buy': 'sell';\n    } else {\n        orderType = order.tokenGive === ETHER_ADDRESS? 'sell': 'buy';\n    }\n\n    return ({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy'? GREEN: RED),\n        orderFillClass: orderType === 'buy' ? '+':'-'\n    });\n}\n\nexport const myOrderOrdersLoadedSelector = createSelector(orderBookLoaded, loaded => loaded);\n\nexport const myOpenOrdersSelector = createSelector(\n    account,\n    openOrders,\n    (account,orders) => {\n        orders = orders.filter(o => o.user === account);\n\n        orders = orders.sort((a,b) =>a.timestamp - b.timestamp);\n\n        orders = decorateMyOpenOrders(orders, account);\n\n        return orders;\n    });\n\nconst decorateMyOpenOrders = (orders, account) => {\n    return orders.map((order) => {\n        order = decorateOrder(order);\n        order = decorateMyOpenOrder(order, account);\n        return order;\n    })\n}\n\nconst decorateMyOpenOrder = (order, account) => {\n\n    const orderType = order.tokenGive === ETHER_ADDRESS? 'buy': 'sell';\n    return ({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy'? GREEN: RED),\n    });\n\n}\n\nexport const priceChatLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded);\n\nexport const priceChartSelector = createSelector(filledOrders, (orders) => {\n\n    orders = orders.sort((a,b) => a.timestamp - b.timestamp);\n\n    orders = orders.map((o) => decorateOrder(o));\n\n    let secondLastOrder, lastOrder;\n\n    [secondLastOrder, lastOrder] = orders.slice(orders.length-2, orders.length);\n\n    const lastPrice = get(lastOrder, 'tokenPrice', 0);\n\n    const secondLastPrice = get(secondLastOrder, 'tokenPrice', 0);\n\n    return ({\n        lastPrice,\n        lastPriceChange: (lastPrice >= secondLastPrice? '+': '-'),\n        series: [{\n            data: buildGraphData(orders)\n        }]\n    })\n\n})\n\nconst buildGraphData = (orders) => {\n    orders = groupBy(orders, (o) => moment.unix(o.timestamp).startOf('hour').format());\n\n    const hours = Object.keys(orders);\n\n    const graphData = hours.map((hour) => {\n        const group = orders[hour];\n\n        const open = group[0];\n        const close = group[group.length-1];\n\n        const high = maxBy(group, 'tokenPrice');\n        const low = minBy(group, 'tokenPrice');\n\n        return ({\n            x: new Date(hour),\n            y: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n        });\n    })\n    return graphData;\n}\n\nconst orderCancelling = state => get(state,'exchange.orderCancelling', false);\nexport const orderCancellingSelector = createSelector(orderCancelling, status => status);\n\nconst orderFilling = state => get(state, 'exchange.orderFilling', false);\nexport const orderFillingSelector = createSelector(orderFilling, status => status);\n\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', true);\nexport const balancesLoadingSelector = createSelector(balancesLoading, status => status);\n\nconst etherBalance = state => get(state, 'web3.balance', true);\nexport const etherBalanceSelector = createSelector(etherBalance,\n    (balance) => {\n        return formatBalance(balance);\n    });\n\nconst tokenBalance = state => get(state, 'token.balance', 0);\nexport const tokenBalanceSelector = createSelector(\n    tokenBalance,\n    (balance) => {\n        return formatBalance(balance);\n    }\n)\n\nconst exchangeEtherBalance = state => get(state, 'exchange.etherBalance', 0);\nexport const exchangeEtherBalanceSelector = createSelector(\n    exchangeEtherBalance,\n    (balance) => {\n        return formatBalance(balance);\n    }\n)\n\n\nconst exchangeTokenBalance = state => get(state, 'exchange.tokenBalance', 0);\nexport const exchangeTokenBalanceSelector = createSelector(\n    exchangeTokenBalance,\n    (balance) => {\n        return formatBalance(balance);\n    }\n)\n\nconst etherDepositAmount = state => get(state, 'exchange.etherDepositAmount', null);\nexport const etherDepositAmountSelector = createSelector(etherDepositAmount, amount => amount);\n\nconst etherWithdrawAmount = state => get(state, 'exchange.etherWithdrawAmount', null);\nexport const etherWithdrawAmountSelector = createSelector(etherWithdrawAmount, amount => amount);\n\nconst tokenDepositAmount = state => get(state, 'exchange.tokenDepositAmount', null);\nexport const tokenDepositAmountSelector = createSelector(tokenDepositAmount, amount => amount);\n\nconst tokenWithdrawAmount = state => get(state, 'exchange.tokenWithdrawAmount', null);\nexport const tokenWithdrawAmountSelector = createSelector(tokenWithdrawAmount, amount => amount);\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {});\nexport const buyOrderSelector = createSelector(buyOrder, order => order);\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {});\nexport const sellOrderSelector = createSelector(sellOrder, order => order);","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {get} from 'lodash';\n\nfunction Navbar() {\n\n    const account = useSelector(state => get(state, 'web3.account'))\n\n    return <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <a className=\"navbar-brand\" href=\"/#\">YT token exchange</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"/>\n        </button>\n        <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n                <a className=\"nav-link small\"\n                   target=\"_blank\"\n                   rel=\"noopener noreferrer\"\n                   href={`https://etherscan.io/address/${account}`}>{account}</a>\n            </li>\n        </ul>\n    </nav>\n}\n\nexport default Navbar","import React from 'react';\n\nexport default function({type}) {\n    if(type === 'table') {\n        return (<tbody className=\"spinner border text-light text-center\"><tr></tr></tbody>)\n    } else {\n        return (<div className=\"spinner border text-light text-center\"/>)\n    }\n}","import React, {Fragment} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport Spinner from '../Commons/Spinner';\nimport {filledOrdersSelector, filledOrdersLoadedSelector} from '../../store/selectors';\n\nfunction Trades() {\n\n    const orderLoaded = useSelector(state => filledOrdersLoadedSelector(state));\n    const orders = useSelector(state => filledOrdersSelector(state));\n\n    const showFilledOrders = (filledOrders) => {\n        return <tbody>\n        {filledOrders.map((order) => {\n            return <tr className={`order-${order.id}`} key={order.id}>\n                <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                <td>{order.tokenAmount}</td>\n                <td className={`text-${order.tokenPriceClass}`}>{order.tokenPrice}</td>\n            </tr>\n        })}\n        </tbody>\n    }\n\n    return <Fragment>\n        <div className=\"vertical\">\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    Trades\n                </div>\n                <div className=\"card-body\">\n                    <table className=\"table table-dark table-sm small\">\n                        <thead>\n                        <tr>\n                            <th>Time</th>\n                            <th>DNR</th>\n                            <th>DNR/ETH</th>\n                        </tr>\n                        </thead>\n                        {orderLoaded ? showFilledOrders(orders) : <Spinner type=\"table\"/>}\n\n                    </table>\n                </div>\n            </div>\n        </div>\n    </Fragment>\n\n}\n\nexport default Trades;","import React, {Fragment} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {\n    orderBookSelector,\n    orderBookLoadedSelector,\n    accountSelector,\n    exchangeSelector,\n    orderFillingSelector\n} from '../../store/selectors';\nimport Spinner from \"../Commons/Spinner\";\nimport {\n    fillOrder\n} from '../../store/interactions'\n\nfunction OrderBook() {\n\n    const orderBookLoaded = useSelector(state => orderBookLoadedSelector(state));\n    const orderFilling = useSelector(state => orderFillingSelector(state));\n\n    const orderBook = useSelector(state => orderBookSelector(state));\n    const showOrderBook = orderBookLoaded && !orderFilling;\n    const exchange = useSelector(exchangeSelector);\n    const account = useSelector(accountSelector);\n\n    const dispatch = useDispatch();\n\n    const renderOrder = (order) => {\n        return <OverlayTrigger\n                key={order.id}\n                placement='auto'\n                overlay={\n                    <Tooltip id={order.id}>\n                        {`Click here to ${order.orderFillAction}`}\n                    </Tooltip>\n                }\n        >\n            <tr key={order.id}\n                onClick={() => fillOrder(dispatch,exchange,order, account)}\n            >\n                <td>{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                <td>{order.etherAmount}</td>\n            </tr>\n        </OverlayTrigger>\n    }\n\n    const listOrderBook = (orderBook) => {\n        return <tbody>\n        {orderBook.sellOrders.map((order) => renderOrder(order))}\n        <tr>\n            <th>DAPP</th>\n            <th>DAPP/ETH</th>\n            <th>ETH</th>\n        </tr>\n        {orderBook.buyOrder.map(order => renderOrder(order))}\n        </tbody>\n    }\n\n    return <Fragment>\n        <div className=\"vertical\">\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    Order Book\n                </div>\n                <div className=\"card-body order-book\">\n                    <table className=\"table table-dark table-sm small\">\n                        {showOrderBook ? listOrderBook(orderBook) : <Spinner type=\"table\"/>}\n                    </table>\n                </div>\n            </div>\n        </div>\n    </Fragment>\n\n}\n\nexport default OrderBook;","import React, {Fragment} from 'react';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport {useSelector, useDispatch} from 'react-redux';\nimport Spinner from \"../Commons/Spinner\";\nimport {\n    myFilledOrderLoadedSelector,\n    myFilledOrdersSelector,\n    myOrderOrdersLoadedSelector,\n    myOpenOrdersSelector,\n    accountSelector,\n    exchangeSelector,\n    orderCancellingSelector\n} from '../../store/selectors';\nimport {\n    cancelOrder\n} from '../../store/interactions';\n\n\nconst showMyFilledOrdersView = ({myFilledOrders}) => {\n\n    return (\n        <tbody>\n        {myFilledOrders.map((order) => {\n            return <tr key={order.id}>\n                <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.orderFillClass}{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n            </tr>\n        })}\n        </tbody>\n    )\n\n}\n\nconst showMyOpenOrderView = ({\n                                 myOpenOrders,\n                                 dispatch,\n                                 exchange,\n                                 account\n                             }) => {\n    return (\n        <tbody>\n        {myOpenOrders.map((order) => {\n            return <tr key={order.id}>\n                <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.orderFillClass}{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                <td className=\"text-muted cancel-order\" onClick={(e) => {\n                    console.log('Cancelling Order');\n                    cancelOrder(dispatch, exchange, order, account)\n                }}>\n                    X\n                </td>\n            </tr>\n        })}\n        </tbody>\n    )\n}\n\nfunction MyTransaction() {\n    const orderCancelling = useSelector(orderCancellingSelector);\n    const openOrdersLoaded = useSelector(myOrderOrdersLoadedSelector);\n\n    const showMyFilledOrders = useSelector(myFilledOrderLoadedSelector);\n    const myFilledOrders = useSelector(myFilledOrdersSelector);\n    const showMyOpenOrders = openOrdersLoaded && !orderCancelling;\n    const myOpenOrders = useSelector(myOpenOrdersSelector);\n    const exchange = useSelector(exchangeSelector);\n    const account = useSelector(accountSelector);\n\n    const dispatch = useDispatch();\n\n    return <Fragment>\n        <div className=\"card bg-dark text-white\">\n            <div className=\"card-header\">\n                My Transactions\n            </div>\n            <div className=\"card-body\">\n                <Tabs defaultActiveKey=\"trades\" className=\"bg-dark text-white\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"trades\" title=\"Trades\" key=\"trades\" className=\"bg-dark\">\n                        <table className=\"table table-dark table-sm small\">\n                            <thead>\n                            <tr>\n                                <th>Time</th>\n                                <th>DNR</th>\n                                <th>DNR/ETH</th>\n                            </tr>\n                            </thead>\n                            {showMyFilledOrders ? showMyFilledOrdersView({\n                                myFilledOrders\n                            }) : <Spinner/>}\n                        </table>\n                    </Tab>\n                    <Tab key=\"orders\" eventKey=\"orders\" title=\"Orders\" className=\"bg-dark\">\n                        <table className=\"table table-dark table-sm small\">\n                            <thead>\n                            <tr>\n                                <th>Time</th>\n                                <th>DNR</th>\n                                <th>DNR/ETH</th>\n                                <th>Cancel</th>\n                            </tr>\n                            </thead>\n                            {showMyOpenOrders ? showMyOpenOrderView({\n                                myOpenOrders,\n                                dispatch,\n                                exchange,\n                                account\n                            }) : <Spinner/>}\n                        </table>\n                    </Tab>\n                </Tabs>\n            </div>\n        </div>\n\n    </Fragment>\n\n}\n\nexport default MyTransaction;","export const chartOptions = {\n    chart: {\n        animations: { enabled: false },\n        toolbar: { show: false },\n        width: '100px'\n    },\n    tooltip: {\n        enabled: true,\n        theme: false,\n        style: {\n            fontSize: '12px',\n            fontFamily: undefined\n        },\n        x: {\n            show: false,\n            format: 'dd MMM',\n            formatter: undefined,\n        },\n        y: {\n            show: true,\n            title: 'price'\n        },\n        marker: {\n            show: false,\n        },\n        items: {\n            display: 'flex',\n        },\n        fixed: {\n            enabled: false,\n            position: 'topRight',\n            offsetX: 0,\n            offsetY: 0,\n        },\n    },\n    xaxis: {\n        type: 'datetime',\n        labels: {\n            show: true,\n            style: {\n                colors: '#fff',\n                fontSize: '8px',\n                cssClass: 'apexcharts-xaxis-label',\n            },\n        },\n    },\n    yaxis: {\n        labels: {\n            show: true,\n            minWidth: 0,\n            maxWidth: 160,\n            style: {\n                color: '#fff',\n                fontSize: '8px',\n                cssClass: 'apexcharts-yaxis-label',\n            },\n            offsetX: 0,\n            offsetY: 0,\n            rotate: 0,\n        }\n    }\n}\n\nexport const dummyData = [\n    {\n        data: [\n            {\n                x: new Date(1538778600000),\n                y: [6629.81, 6650.5, 6623.04, 6633.33]\n            },\n            {\n                x: new Date(1538780400000),\n                y: [6632.01, 6643.59, 6620, 6630.11]\n            },\n            {\n                x: new Date(1538782200000),\n                y: [6630.71, 6648.95, 6623.34, 6635.65]\n            },\n            {\n                x: new Date(1538784000000),\n                y: [6635.65, 6651, 6629.67, 6638.24]\n            },\n            {\n                x: new Date(1538785800000),\n                y: [6638.24, 6640, 6620, 6624.47]\n            },\n            {\n                x: new Date(1538787600000),\n                y: [6624.53, 6636.03, 6621.68, 6624.31]\n            },\n            {\n                x: new Date(1538789400000),\n                y: [6624.61, 6632.2, 6617, 6626.02]\n            },\n            {\n                x: new Date(1538791200000),\n                y: [6627, 6627.62, 6584.22, 6603.02]\n            },\n            {\n                x: new Date(1538793000000),\n                y: [6605, 6608.03, 6598.95, 6604.01]\n            },\n            {\n                x: new Date(1538794800000),\n                y: [6604.5, 6614.4, 6602.26, 6608.02]\n            },\n            {\n                x: new Date(1538796600000),\n                y: [6608.02, 6610.68, 6601.99, 6608.91]\n            },\n            {\n                x: new Date(1538798400000),\n                y: [6608.91, 6618.99, 6608.01, 6612]\n            },\n            {\n                x: new Date(1538800200000),\n                y: [6612, 6615.13, 6605.09, 6612]\n            },\n            {\n                x: new Date(1538802000000),\n                y: [6612, 6624.12, 6608.43, 6622.95]\n            },\n            {\n                x: new Date(1538803800000),\n                y: [6623.91, 6623.91, 6615, 6615.67]\n            },\n            {\n                x: new Date(1538805600000),\n                y: [6618.69, 6618.74, 6610, 6610.4]\n            },\n            {\n                x: new Date(1538807400000),\n                y: [6611, 6622.78, 6610.4, 6614.9]\n            },\n            {\n                x: new Date(1538809200000),\n                y: [6614.9, 6626.2, 6613.33, 6623.45]\n            },\n            {\n                x: new Date(1538811000000),\n                y: [6623.48, 6627, 6618.38, 6620.35]\n            },\n            {\n                x: new Date(1538812800000),\n                y: [6619.43, 6620.35, 6610.05, 6615.53]\n            },\n            {\n                x: new Date(1538814600000),\n                y: [6615.53, 6617.93, 6610, 6615.19]\n            },\n            {\n                x: new Date(1538816400000),\n                y: [6615.19, 6621.6, 6608.2, 6620]\n            },\n            {\n                x: new Date(1538818200000),\n                y: [6619.54, 6625.17, 6614.15, 6620]\n            },\n            {\n                x: new Date(1538820000000),\n                y: [6620.33, 6634.15, 6617.24, 6624.61]\n            },\n            {\n                x: new Date(1538821800000),\n                y: [6625.95, 6626, 6611.66, 6617.58]\n            },\n            {\n                x: new Date(1538823600000),\n                y: [6619, 6625.97, 6595.27, 6598.86]\n            },\n            {\n                x: new Date(1538825400000),\n                y: [6598.86, 6598.88, 6570, 6587.16]\n            },\n            {\n                x: new Date(1538827200000),\n                y: [6588.86, 6600, 6580, 6593.4]\n            },\n            {\n                x: new Date(1538829000000),\n                y: [6593.99, 6598.89, 6585, 6587.81]\n            },\n            {\n                x: new Date(1538830800000),\n                y: [6587.81, 6592.73, 6567.14, 6578]\n            },\n            {\n                x: new Date(1538832600000),\n                y: [6578.35, 6581.72, 6567.39, 6579]\n            },\n            {\n                x: new Date(1538834400000),\n                y: [6579.38, 6580.92, 6566.77, 6575.96]\n            },\n            {\n                x: new Date(1538836200000),\n                y: [6575.96, 6589, 6571.77, 6588.92]\n            },\n            {\n                x: new Date(1538838000000),\n                y: [6588.92, 6594, 6577.55, 6589.22]\n            },\n            {\n                x: new Date(1538839800000),\n                y: [6589.3, 6598.89, 6589.1, 6596.08]\n            },\n            {\n                x: new Date(1538841600000),\n                y: [6597.5, 6600, 6588.39, 6596.25]\n            },\n            {\n                x: new Date(1538843400000),\n                y: [6598.03, 6600, 6588.73, 6595.97]\n            },\n            {\n                x: new Date(1538845200000),\n                y: [6595.97, 6602.01, 6588.17, 6602]\n            },\n            {\n                x: new Date(1538847000000),\n                y: [6602, 6607, 6596.51, 6599.95]\n            },\n            {\n                x: new Date(1538848800000),\n                y: [6600.63, 6601.21, 6590.39, 6591.02]\n            },\n            {\n                x: new Date(1538850600000),\n                y: [6591.02, 6603.08, 6591, 6591]\n            },\n            {\n                x: new Date(1538852400000),\n                y: [6591, 6601.32, 6585, 6592]\n            },\n            {\n                x: new Date(1538854200000),\n                y: [6593.13, 6596.01, 6590, 6593.34]\n            },\n            {\n                x: new Date(1538856000000),\n                y: [6593.34, 6604.76, 6582.63, 6593.86]\n            },\n            {\n                x: new Date(1538857800000),\n                y: [6593.86, 6604.28, 6586.57, 6600.01]\n            },\n            {\n                x: new Date(1538859600000),\n                y: [6601.81, 6603.21, 6592.78, 6596.25]\n            },\n            {\n                x: new Date(1538861400000),\n                y: [6596.25, 6604.2, 6590, 6602.99]\n            },\n            {\n                x: new Date(1538863200000),\n                y: [6602.99, 6606, 6584.99, 6587.81]\n            },\n            {\n                x: new Date(1538865000000),\n                y: [6587.81, 6595, 6583.27, 6591.96]\n            },\n            {\n                x: new Date(1538866800000),\n                y: [6591.97, 6596.07, 6585, 6588.39]\n            },\n            {\n                x: new Date(1538868600000),\n                y: [6587.6, 6598.21, 6587.6, 6594.27]\n            },\n            {\n                x: new Date(1538870400000),\n                y: [6596.44, 6601, 6590, 6596.55]\n            },\n            {\n                x: new Date(1538872200000),\n                y: [6598.91, 6605, 6596.61, 6600.02]\n            },\n            {\n                x: new Date(1538874000000),\n                y: [6600.55, 6605, 6589.14, 6593.01]\n            },\n            {\n                x: new Date(1538875800000),\n                y: [6593.15, 6605, 6592, 6603.06]\n            },\n            {\n                x: new Date(1538877600000),\n                y: [6603.07, 6604.5, 6599.09, 6603.89]\n            },\n            {\n                x: new Date(1538879400000),\n                y: [6604.44, 6604.44, 6600, 6603.5]\n            },\n            {\n                x: new Date(1538881200000),\n                y: [6603.5, 6603.99, 6597.5, 6603.86]\n            },\n            {\n                x: new Date(1538883000000),\n                y: [6603.85, 6605, 6600, 6604.07]\n            },\n            {\n                x: new Date(1538884800000),\n                y: [6604.98, 6606, 6604.07, 6606]\n            },\n        ]\n    }\n]\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport {useSelector} from 'react-redux';\nimport Spinner from '../Commons/Spinner';\nimport {chartOptions, dummyData} from './config';\nimport {priceChatLoadedSelector, priceChartSelector} from '../../store/selectors';\n\nconst priceSymbol = (lastPriceChange) => {\n    let output;\n    if(lastPriceChange === '+') {\n        output = <span className=\"text-success\">&#9650;</span>\n    } else {\n        output = <span className=\"text-danger\">&#9660;</span>\n    }\n\n    return output;\n}\n\nconst showPriceChart = (priceChart) => {\n    return <div className=\"price-chart\">\n        <div className=\"price\">\n            <h4>DNR/ETH&nbsp; {priceSymbol(priceChart.lastPriceChange)} {priceChart.lastPrice}</h4>\n        </div>\n            <Chart options={chartOptions} series={priceChart.series} type='candlestick' widht=\"100%\" height=\"100%\"/>\n    </div>\n}\n\nfunction PriceChart () {\n\n    const priceChartLoaded = useSelector(priceChatLoadedSelector);\n    const priceChart = useSelector(priceChartSelector);\n\n    return <div className=\"card bg-dark text-white\">\n\n        <div className=\"card-header\">\n            Price Chart\n        </div>\n        <div className=\"card-body\">\n            {priceChartLoaded?showPriceChart(priceChart): <Spinner/>}\n        </div>\n\n    </div>\n}\n\nexport default PriceChart;","import React, {Fragment, useEffect} from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {\n    web3Selector,\n    exchangeSelector,\n    tokenSelector,\n    accountSelector,\n    balancesLoadingSelector,\n    etherBalanceSelector,\n    tokenBalanceSelector,\n    exchangeEtherBalanceSelector,\n    exchangeTokenBalanceSelector,\n    etherDepositAmountSelector,\n    etherWithdrawAmountSelector,\n    tokenDepositAmountSelector,\n    tokenWithdrawAmountSelector\n} from '../../store/selectors';\nimport {\n    loadBalances,\n    depositEther,\n    withdrawEther,\n    depositToken,\n    withdrawToken\n} from '../../store/interactions';\nimport Spinner from \"../Commons/Spinner\";\nimport {\n    etherDepositAmountChanged,\n    etherWithdrawAmountChanged,\n    tokenDepositAmountChanged,\n    tokenWithdrawAmountChanged\n} from '../../store/actions';\nimport {Tabs, Tab} from 'react-bootstrap';\n\n\nfunction Balance() {\n\n    const account = useSelector(accountSelector);\n    const exchange = useSelector(exchangeSelector);\n    const token = useSelector(tokenSelector);\n    const web3 = useSelector(web3Selector);\n    const etherBalance = useSelector(etherBalanceSelector);\n    const tokenBalance = useSelector(tokenBalanceSelector);\n    const exchangeEtherBalance = useSelector(exchangeEtherBalanceSelector);\n    const exchangeTokenBalance = useSelector(exchangeTokenBalanceSelector);\n    const balanceLoading = useSelector(balancesLoadingSelector);\n    const etherDepositAmount = useSelector(etherDepositAmountSelector);\n    const etherWithdrawAmount = useSelector(etherWithdrawAmountSelector);\n    const tokenDepositAmount = useSelector(tokenDepositAmountSelector);\n    const tokenWithdrawAmount = useSelector(tokenWithdrawAmountSelector);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        loadBlockChainData();\n    },[]);\n\n    const loadBlockChainData = async () => {\n        await loadBalances(dispatch, web3, exchange, token, account);\n    }\n\n\n\n    const showForm = () => {\n        return  <Tabs defaultActiveKey=\"deposit\" className=\"bg-dark text-white\" >\n            <Tab eventKey=\"deposit\" title=\"deposit\" key=\"deposit\" className=\"bg-dark\">\n                <table className=\"table table-dark table-sm small\">\n                    <thead>\n                    <tr>\n                        <th>Token</th>\n                        <th>Wallet</th>\n                        <th>Exchange</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>ETH</td>\n                        <td>{etherBalance}</td>\n                        <td>{exchangeEtherBalance}</td>\n                    </tr>\n                    <tr>\n                        <td>DNR</td>\n                        <td>{tokenBalance}</td>\n                        <td>{exchangeTokenBalance}</td>\n                    </tr>\n                    </tbody>\n                </table>\n\n                <form className=\"row\" onSubmit={(event) => {\n\n                event.preventDefault();\n                    depositEther(dispatch, exchange, web3, etherDepositAmount, account)\n                }\n                }>\n                    <div className=\" clo-13 col-sm pr-sm-2\">\n                        <input type=\"text\"\n                                placeholder=\"ETH Amount\"\n                               onChange={(e) => dispatch(etherDepositAmountChanged(e.target.value))}\n                               className=\"form-control form-control-sm bg-dark text-white\"\n                               required\n                        />\n                    </div>\n                    <div className=\"col-12 col-sm-auto pl-sm-0\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n                    </div>\n                </form>\n\n\n                <form className=\"row\" onSubmit={(event) => {\n\n                    event.preventDefault();\n                    depositToken(dispatch, exchange, web3,token,  tokenDepositAmount, account)\n                }\n                }>\n                    <div className=\" clo-13 col-sm pr-sm-2\">\n                        <input type=\"text\"\n                               placeholder=\"Token Amount\"\n                               onChange={(e) => dispatch(tokenDepositAmountChanged(e.target.value))}\n                               className=\"form-control form-control-sm bg-dark text-white\"\n                               required\n                        />\n                    </div>\n                    <div className=\"col-12 col-sm-auto pl-sm-0\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n                    </div>\n                </form>\n\n            </Tab>\n            <Tab key=\"withdraw\" eventKey=\"withdraw\" title=\"Withdraw\" className=\"bg-dark\">\n                <table className=\"table table-dark table-sm small\">\n                    <thead>\n                    <tr>\n                        <th>Token</th>\n                        <th>Wallet</th>\n                        <th>Exchange</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>ETH</td>\n                        <td>{etherBalance}</td>\n                        <td>{exchangeEtherBalance}</td>\n                    </tr>\n                    <tr>\n                        <td>DNR</td>\n                        <td>{tokenBalance}</td>\n                        <td>{exchangeTokenBalance}</td>\n                    </tr>\n                    </tbody>\n                </table>\n                <form className=\"row\" onSubmit={(event) => {\n\n                    event.preventDefault();\n                    withdrawEther(dispatch, exchange, web3, etherWithdrawAmount, account)\n                }\n                }>\n                    <div className=\" clo-13 col-sm pr-sm-2\">\n                        <input type=\"text\"\n                               placeholder=\"ETH Amount\"\n                               onChange={(e) => dispatch(etherWithdrawAmountChanged(e.target.value))}\n                               className=\"form-control form-control-sm bg-dark text-white\"\n                               required\n                        />\n                    </div>\n                    <div className=\"col-12 col-sm-auto pl-sm-0\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n                    </div>\n                </form>\n\n                <form className=\"row\" onSubmit={(event) => {\n\n                    event.preventDefault();\n                    withdrawToken(dispatch, exchange, web3,token,  tokenWithdrawAmount, account)\n                }\n                }>\n                    <div className=\" clo-13 col-sm pr-sm-2\">\n                        <input type=\"text\"\n                               placeholder=\"Token Amount\"\n                               onChange={(e) => dispatch(tokenWithdrawAmountChanged(e.target.value))}\n                               className=\"form-control form-control-sm bg-dark text-white\"\n                               required\n                        />\n                    </div>\n                    <div className=\"col-12 col-sm-auto pl-sm-0\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n                    </div>\n                </form>\n            </Tab>\n        </Tabs>\n    }\n\n    return <div className=\"card bg-dark text-white\">\n            <div className=\"card-header\">\n                Balance\n            </div>\n            <div className=\"card-body\">\n                {!balanceLoading?showForm(): <Spinner/>}\n            </div>\n    </div>\n\n\n}\n\nexport default  Balance;","import React from 'react';\nimport {Tabs, Tab} from \"react-bootstrap\";\nimport Spinner from '../Commons/Spinner';\nimport {\n    accountSelector,\n    exchangeSelector,\n    tokenSelector,\n    web3Selector,\n    buyOrderSelector,\n    sellOrderSelector\n} from '../../store/selectors';\nimport {\n    buyOrderAmountChanged,\n    buyOrderPriceChanged,\n    sellOrderAmountChanged,\n    sellOrderPriceChanged, tokenWithdrawAmountChanged\n} from '../../store/actions';\nimport {useSelector, useDispatch} from \"react-redux\";\n\nimport {\n    makeBuyOrder,\n    makeSellOrder\n} from '../../store/interactions';\n\n\nconst showFormView = ({\n                          dispatch,\n                          exchange,\n                          web3,\n                          token,\n                          account,\n                          buyOrder,\n    sellOrder,\n                          showBuyTotal,\n                          showSellTotal\n\n                      }) => {\n\n\n    return <Tabs defaultActiveKey=\"buy\" className=\"bg-dark text-white\">\n\n        <Tab eventKey=\"buy\" title=\"Buy\" className=\"bg-dark\">\n            <form onSubmit={(event) => {\n\n                event.preventDefault();\n                makeBuyOrder(dispatch, exchange, token, web3, buyOrder, account)\n            }\n            }>\n                <div className=\"form-group small\">\n                    <label>Buy DRT Amount</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\"\n                               placeholder=\"Buy Amount\"\n                               onChange={(e) => dispatch(buyOrderAmountChanged(e.target.value))}\n                               className=\"form-control form-control-sm bg-dark text-white\"\n                               required\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group small\">\n                    <label>Buy Price</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\"\n                               placeholder=\"Buy Price\"\n                               onChange={(e) => dispatch(buyOrderPriceChanged(e.target.value))}\n                               className=\"form-control form-control-sm bg-dark text-white\"\n                               required\n                        />\n                    </div>\n                </div>\n                <div className=\"col-12 col-sm-auto pl-sm-0\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">Buy Order</button>\n                    <small>{showBuyTotal ? <span>Total: {buyOrder.amount * buyOrder.price} ETH</span> : null}</small>\n                </div>\n            </form>\n        </Tab>\n        <Tab eventKey=\"sell\" title=\"Sell\" className=\"bg-dark\">\n            <form onSubmit={(event) => {\n\n                event.preventDefault();\n                makeSellOrder(dispatch, exchange, token, web3, sellOrder, account)\n            }\n            }>\n                <div className=\"form-group small\">\n                    <label>Sell DRT Amount</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\"\n                               placeholder=\"Sell Amount\"\n                               onChange={(e) => dispatch(sellOrderAmountChanged(e.target.value))}\n                               className=\"form-control form-control-sm bg-dark text-white\"\n                               required\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group small\">\n                    <label>Sell Price</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\"\n                               placeholder=\"Sell Price\"\n                               onChange={(e) => dispatch(sellOrderPriceChanged(e.target.value))}\n                               className=\"form-control form-control-sm bg-dark text-white\"\n                               required\n                        />\n                    </div>\n                </div>\n                <div className=\"col-12 col-sm-auto pl-sm-0\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">Sell Order</button>\n                    <small>{showSellTotal ? <span>Total: {sellOrder.amount * sellOrder.price} ETH</span> : null}</small>\n                </div>\n            </form>\n        </Tab>\n    </Tabs>\n}\n\nfunction NewOrder() {\n    const buyOrder = useSelector(buyOrderSelector);\n    const sellOrder = useSelector(sellOrderSelector);\n\n    const exchange = useSelector(exchangeSelector);\n    const token = useSelector(tokenSelector);\n    const account = useSelector(accountSelector);\n    const web3 = useSelector(web3Selector);\n    const showForm = !buyOrder.making && !sellOrder.making;\n    const showBuyTotal = buyOrder.amount && buyOrder.price;\n    const showSellTotal = sellOrder.amount && sellOrder.price;\n\n    const dispatch = useDispatch();\n\n\n    return <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n            New order\n        </div>\n        <div className=\"card-body\">\n            {showForm? showFormView({\n                dispatch,\n                exchange,\n                token,\n                account,\n                web3,\n                buyOrder,\n                sellOrder,\n                showBuyTotal,\n                showSellTotal\n            }): <Spinner/>}\n        </div>\n\n    </div>\n\n}\n\nexport default NewOrder;","import React, {Fragment, useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loadAllOrders,subscribeToEvents} from \"../../store/interactions\";\nimport Trades from \"../Trades\";\nimport OrderBook from \"../OrderBook\";\nimport MyTransaction from \"../MyTransactions\";\nimport PriceChart from '../PriceChart';\nimport Balance from '../Balance';\nimport NewOrder from '../NewOrder';\n\nfunction Content() {\n\n    const dispatch = useDispatch();\n\n    const exchange  = useSelector(state => state.exchange.contract);\n\n    useEffect(() => {\n        loadBlockchainData(dispatch)\n    }, [])\n\n    const loadBlockchainData = async (dispatch) => {\n        await loadAllOrders(exchange, dispatch);\n        await subscribeToEvents(dispatch, exchange);\n    }\n\n\n\n    return <Fragment>\n        <div className=\"content\">\n            <div className=\"vertical-split\">\n                <Balance/>\n                <NewOrder/>\n            </div>\n            <OrderBook/>\n            <div className=\"vertical-split\">\n                <PriceChart/>\n                <MyTransaction/>\n            </div>\n            <Trades/>\n        </div>\n    </Fragment>\n}\n\nexport default Content;","import React, {Component} from 'react';\nimport './App.css';\nimport {connect} from 'react-redux';\nimport {\n    loadWeb3,\n    loadAccount,\n    loadToken,\n    loadExchange\n} from '../../store/interactions'\nimport {\n    contractLoadedSelector\n} from '../../store/selectors';\n\nimport Navbar from '../Navbar'\nimport Content from \"../Content\";\n\nclass App extends Component {\n    componentWillMount() {\n        this.loadBlockchainData(this.props.dispatch)\n    }\n\n    async loadBlockchainData(dispatch) {\n        const web3 = loadWeb3(dispatch);\n        const networkId = await web3.eth.net.getId()\n        const account = await loadAccount(web3, dispatch);\n        const token = loadToken(web3, networkId, dispatch);\n        if(!token) {\n            window.alert('Contract not deployed to the current network. Please select another network with metamask');\n            return;\n        }\n        const exchange = loadExchange(web3, networkId, dispatch);\n        if(!exchange) {\n            window.alert('Contract not deployed to the current network. Please select another network with metamask');\n            return;\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                {this.props.contractsLoaded ? <Content/>:  <div className=\"content\"/>}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    console.log(\"Loaded\",contractLoadedSelector(state))\n    return {\n        contractsLoaded: contractLoadedSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps, null)(App);\n","import {combineReducers} from \"redux\";\n\nfunction web3(state = {}, action) {\n    switch (action.type) {\n        case 'WEB3_LOADED':\n            return {\n                ...state,\n                connection: action.connection\n            }\n        case 'WEB3_ACCOUNT_LOADED':\n            return {\n                ...state,\n                account: action.account\n            }\n        case 'ETHER_BALANCE_LOADED':\n            return {...state, balance: action.balance}\n        default:\n            return state;\n    }\n}\n\nfunction token(state = [], action) {\n    switch (action.type) {\n        case 'TOKEN_LOADED':\n            return {\n                ...state,\n                contract: action.contract,\n                loaded: true\n            }\n        case 'TOKEN_BALANCE_LOADED':\n            return {...state, balance: action.balance}\n        default:\n            return state;\n    }\n}\n\nfunction exchange(state = {}, action) {\n    switch (action.type) {\n        case 'EXCHANGE_LOADED':\n            return {\n                ...state,\n                contract: action.contract,\n                loaded: true\n            }\n        case 'CANCELLED_ORDERS_LOADED':\n            return {\n                ...state,\n                cancelledOrders: {\n                    loaded: true,\n                    data: action.cancelledOrders\n                }\n            }\n        case 'FILLED_ORDERS_LOADED':\n            return {\n                ...state,\n                filledOrders: {\n                    loaded: true,\n                    data: action.filledOrders\n                }\n            }\n        case 'ALL_ORDERS_LOADED':\n            return {\n                ...state,\n                allOrders: {\n                    loaded: true,\n                    data: action.allOrders\n                }\n            }\n        case 'ORDER_CANCELLING':\n            return {\n                ...state,\n                orderCancelling: true\n            }\n        case 'ORDER_CANCELLED': {\n            return {\n                ...state,\n                orderCancelling: false,\n                cancelledOrders: {\n                    ...state.cancelledOrders,\n                    data: [\n                        ...state.cancelledOrders.data,\n                        action.order\n                    ]\n                }\n            }\n        }\n        case 'ORDER_FILLING': {\n            return {\n                ...state,\n                orderFilling: true\n            }\n        }\n        case 'ORDER_FILLED': {\n            const index = state.filledOrders.data.findIndex(order => order.id === action.order.id);\n            let data;\n\n            if (index === -1) {\n                data = [...state.filledOrders.data, action.order]\n            } else {\n                data = state.filledOrders.data;\n            }\n\n            return {\n                ...state,\n                orderFilling: false,\n                filledOrders: {\n                    ...state.filledOrders,\n                    data\n                }\n            }\n        }\n        case 'EXCHANGE_ETHER_BALANCE_LOADED':\n            return {...state, etherBalance: action.balance}\n        case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n            return {...state, tokenBalance: action.balance}\n        case 'BALANCES_LOADING':\n            return {...state, balancesLoading: true}\n        case 'BALANCES_LOADED':\n            return {...state, balancesLoading: false}\n        case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n            return {\n                ...state,\n                etherDepositAmount: action.amount\n            }\n        case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n            return {\n                ...state,\n                etherWithdrawAmount: action.amount\n            }\n        case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n            return {\n                ...state,\n                tokenDepositAmount: action.amount\n            }\n        case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n            return {\n                ...state,\n                tokenWithdrawAmount: action.amount\n            }\n        case 'BUY_ORDER_AMOUNT_CHANGED':\n            return {\n                ...state,\n                buyOrder: {\n                    ...state.buyOrder,\n                    amount: action.amount\n                }\n            }\n        case 'BUY_ORDER_PRICE_CHANGED':\n            return {\n                ...state,\n                buyOrder: {\n                    ...state.buyOrder,\n                    price: action.price\n                }\n            }\n        case 'BUY_ORDER_MAKING':\n            return {\n                ...state,\n                buyOrder: {\n                    ...state.buyOrder,\n                    amount: null,\n                    price: null,\n                    making: true\n                }\n            }\n        case 'ORDER_MADE':\n\n            const index = state.allOrders.data.findIndex(order => order.id === action.order.id);\n\n            let data;\n            if(index === -1) {\n                data = [...state.allOrders.data, action.order]\n            } else {\n                data = state.allOrders.data;\n            }\n\n            return {\n                ...state,\n                allOrders: {\n                    ...state.allOrders,\n                    data\n                },\n                buyOrder: {\n                    ...state.buyOrder,\n                    making: false\n                },\n                sellOrder: {\n                    ...state.sellOrder,\n                    making: false\n                }\n            }\n\n\n        case 'SELL_ORDER_AMOUNT_CHANGED':\n            return {...state, sellOrder: {...state.sellOrder, amount: action.amount}}\n        case 'SELL_ORDER_PRICE_CHANGED':\n            return {...state, sellOrder: {...state.sellOrder, price: action.price}}\n        case 'SELL_ORDER_MAKING':\n            return {...state, sellOrder: {...state.sellOrder, amount: null, price: null, making: true}}\n\n        default:\n            return state;\n    }\n}\n\nconst rootReduces = combineReducers({\n    web3,\n    token,\n    exchange\n})\n\nexport default rootReduces;","import {createStore, applyMiddleware, compose} from \"redux\";\nimport {createLogger} from 'redux-logger';\nimport rootReducer from './reducer';\n\nconst loggerMiddleware = createLogger();\nconst middleware = [];\n\n// For redux Dev tools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nfunction ConfigureStore(preloadedState) {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        composeEnhancers(applyMiddleware(...middleware,loggerMiddleware))\n    )\n}\n\nexport default ConfigureStore;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport configureStore from './store/configureStore';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}